#!/bin/sh
#set -x

PORT="22"
CMD=""
SFTP=""
PW=""
USER=""
IDENT=""

if uname | grep -i Darwin; then
	HOME=$(finger `whoami` | awk '/^Directory/ {print $2}')
else	
 HOME=$(getent passwd `whoami` | cut -d: -f6)
fi	

while [[ $# > 0 ]]
do
key="$1"

case $key in
    -usr)
    USER="$2"
    shift # past argument
    ;;
    -pw)
    PW="$2"
    shift # past argument
    ;;
    -i)
    IDENT="$2"
    shift # past argument
    ;;				
    -m)
    HOST="$2"
    shift # past argument
    ;;
    -port)
    PORT="$2"
    shift # past argument
    ;;
    -sftp)
    SFTP="Y"
    ;;	
    -syn)
    ;;
    -force)
    ;;
    -t)
    TTY="-t"
    ;;
    *)
    CMD="$CMD $1"
    ;;
esac
shift # past argument or value
done

if [ "$PORT" = "0" ]; then
 PORT="22"
fi

CMD=`echo $CMD | xargs`

mkdir "$HOME/.ssh" 2>/dev/null 1>/dev/null
ssh-keygen -R $HOST  2>/dev/null 1>/dev/null
ssh-keygen -R `getent ahostsv4 $HOST | awk '{print $1}' | sort -u | head -1`  2>/dev/null 1>/dev/null

if [ ! -e "$HOME/.ssh/known_hosts" ]; then
 if [ "${PORT}" == "22" ]; then
   ssh-keyscan -p $PORT -t rsa,dsa $HOST 2>/dev/null 1>> $HOME/.ssh/known_hosts
 else
   ssh-keyscan -p $PORT -t rsa,dsa $HOST 2>/dev/null | sed "s/$HOST/[$HOST]:$PORT/" 1>> $HOME/.ssh/known_hosts
 fi
 sort -u $HOME/.ssh/known_hosts > $HOME/.ssh/known_hosts.unique
 cat $HOME/.ssh/known_hosts.unique > $HOME/.ssh/known_hosts
fi

cat $HOME/.ssh/known_hosts | grep -v "$HOST" >  $HOME/.ssh/known_hosts.unique
cat $HOME/.ssh/known_hosts.unique > $HOME/.ssh/known_hosts

if ! grep -q "$HOST" "$HOME/.ssh/known_hosts"; then
 if [ "${PORT}" == "22" ]; then
   ssh-keyscan -p $PORT -t rsa,dsa $HOST 2>/dev/null 1>> $HOME/.ssh/known_hosts
 else
   ssh-keyscan -p $PORT -t rsa,dsa $HOST 2>/dev/null | sed "s/$HOST/[$HOST]:$PORT/" >> $HOME/.ssh/known_hosts
 fi
 sort -u $HOME/.ssh/known_hosts > $HOME/.ssh/known_hosts.unique
 cat $HOME/.ssh/known_hosts.unique > $HOME/.ssh/known_hosts
fi


if [ "${SFTP}" = "Y" ]; then

	TMPFILE=/tmp/re-copy$$

	echo $CMD > $TMPFILE
	echo bye >> $TMPFILE

 if [ "${IDENT}" != "" ]; then
		if [ "${USER}" != "" ]; then
		  cat $TMPFILE | sftp -i $IDENT -P $PORT $USER@$HOST
		else
		  cat $TMPFILE | sftp -i $IDENT -P $PORT $HOST			
		fi			
 elif [ "${PW}" = "" ]; then
		if [ "${USER}" != "" ]; then		
			cat $TMPFILE | sftp -P $PORT $USER@$HOST
		else
			cat $TMPFILE | sftp -P $PORT $HOST
		fi	
 else
		cat $TMPFILE | sshpass -p "$PW" sftp -P $PORT $USER@$HOST >/dev/null 2>/tmp/sftp$$.out
  C=$(cat /tmp/sftp$$.out | grep -v "Warning" | grep -v "Connected to" | wc -l | cut -d' ' -f1)
  if [ "$C" -gt 1 ]; then
          cat /tmp/sftp$$.out | awk 'BEGIN {FS=":"} NR==2 {print $2}'>&2
          rm -f /tmp/sftp$$.out
          exit 1
  fi
  rm -f /tmp/sftp$$.out
	fi	
else	
	# Check Remote OS Type
	OSCHECK=""
	
 if [ "${IDENT}" != "" ]; then
		if [ "${USER}" != "" ]; then
			OSCHECK=`ssh -q $TTY -i $IDENT -p $PORT $USER@$HOST "uname"`
		else
				OSCHECK=`ssh -q $TTY -i $IDENT -p $PORT $HOST "uname"`
		fi			
 elif [ "${PW}" = "" ]; then
				if [ "${USER}" != "" ]; then
					 OSCHECK=`ssh -q $TTY -p $PORT $USER@$HOST "uname"`
				else
					 OSCHECK=`ssh -q $TTY -p $PORT $HOST "uname"`
				fi	
	else			
				OSCHECK=`sshpass -p "$PW" ssh -q $TTY -p $PORT $USER@$HOST "uname"`
	fi
	
	# Failed to Execute process = Windows
	if echo "$OSCHECK" | grep -i 'Failed to Execute process'; then
			#Fixup mkdir command			
			OIFS=IFS
			IFS=';'
			NEWCMD=""

			for x in $CMD
			do
			  if [[ $x = *"mkdir -p"* ]]; then
			    x=`echo $x | cut -b 10-`
			    IFS='/'
			    newdir=""
			    for y in $x
			    do
			     if [[ $y != "" ]]; then
			       newdir+='#'
			       newdir+=$y
			       NEWCMD+="mkdir $newdir && "
			     fi
			    done
							NEWCMD="cmd /c \"`echo $NEWCMD | rev | cut -c 5- | rev`\""
			  else
			    IFS=" "
			    NEWCMD+="$x"
			    NEWCMD+=";"
			  fi
			done

			IFS=OIFS
			CMD=`echo $NEWCMD | tr "#" "/"`
	fi		
	
	# Run the command
 if [ "${IDENT}" != "" ]; then
		if [ "${USER}" != "" ]; then
			ssh -q $TTY -i $IDENT -p $PORT $USER@$HOST "$CMD"
		else
				ssh -q $TTY -i $IDENT -p $PORT $HOST "$CMD"
		fi			
 elif [ "${PW}" = "" ]; then
				if [ "${USER}" != "" ]; then
					 ssh -q $TTY -p $PORT $USER@$HOST "$CMD"
				else
					 ssh -q $TTY -p $PORT $HOST "$CMD"
				fi	
	else			
				sshpass -p "$PW" ssh -q $TTY -p $PORT $USER@$HOST "$CMD"
	fi			
fi	
